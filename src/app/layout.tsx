import { Suspense } from "react";
import type { Metadata } from "next";
import "../styles/index.scss";
import { AppProvider } from "../context/AppContext";
import { LocaleProvider } from "../context/LocaleContext";
import { Noto_Sans, Noto_Sans_SC, Noto_Sans_TC, Noto_Sans_Thai } from 'next/font/google'
import ClientWrapper from "../components/ClientWrapper";

// Configure fonts for different languages
const notoSans = Noto_Sans({
  subsets: ['latin'],
  weight: ['400', '500', '600', '700'],
  variable: '--font-noto-sans',
  display: 'swap',
})

const notoSansSC = Noto_Sans_SC({
  subsets: ['latin'],
  weight: ['400', '500', '600', '700'],
  variable: '--font-noto-sans-sc',
  display: 'swap',
})

const notoSansTC = Noto_Sans_TC({
  subsets: ['latin'],
  weight: ['400', '500', '600', '700'],
  variable: '--font-noto-sans-tc',
  display: 'swap',
})

const notoSansThai = Noto_Sans_Thai({
  subsets: ['latin', 'thai'],
  weight: ['400', '500', '600', '700'],
  variable: '--font-noto-sans-thai',
  display: 'swap',
})

interface HreflangLink {
    rel: 'alternate';
    hrefLang: string; // e.g., 'en', 'fr', 'x-default'
    href: string;     // The URL path
}

const DEFAULT_LOCALE = 'en'
const SUPPORTED_LOCALES = [
  'en', 'fr', 'es', 'de', 'it', 'yue', 'sv', 'pt', 'da', 'lv', 'tr', 'hr', 'zh', 'th'
]
function generateHreflangLinks(): HreflangLink[] {
    const links: HreflangLink[] = [{
        // x-default should point to the language the site defaults to.
        rel: 'alternate',
        hrefLang: 'x-default',
        href: `/${DEFAULT_LOCALE}`,
    }];

    SUPPORTED_LOCALES.forEach(locale => {
        links.push({
            rel: 'alternate',
            hrefLang: locale,
            // The paths generated by your build-i18n.js script are /<locale>/
            href: `/${locale}`,
        });
    });

    return links;
}

const baseMetadata: Omit<Metadata, 'alterantes'> = {
  title: "Digital City Series | Skateboarding, AI and Oil Paintings",
  description: "A unique urban art project by Bernard Bolter. Cities are captured on a skateboard, transformed through AI, and reimagined as collaborative oil paintings. Explore the journey.",
  icons: {
    icon: [
      { url: '/favicon.svg', type: 'image/svg+xml' }, 
      { url: '/favicon.ico', sizes: 'any' },  
    ],
  }
};

export function generateMetadata(): Metadata {
    const hreflangLinks = generateHreflangLinks();

    // Transform links array into the format required by Next.js 'alternates'
    const languagesAlternates = hreflangLinks.reduce((acc: Record<string, string>, link) => {
        // Use 'x-default' as key for x-default, and locale for others
        acc[link.hrefLang] = link.href;
        return acc;
    }, {});

    return {
        ...baseMetadata,
        alternates: {
            languages: languagesAlternates,
        }
    }
}

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html lang="en" className={`${notoSans.variable} ${notoSansSC.variable} ${notoSansThai.variable} ${notoSansTC.variable}`}>
      <body>
        <LocaleProvider>
          <AppProvider>
            {/* --- FIX: Wrap ClientWrapper in Suspense --- */}
            <Suspense fallback={<div>Loading...</div>}>
              <ClientWrapper>
                <div className='layout__content'>
                  {children}
                </div>
              </ClientWrapper>
            </Suspense>
            {/* --- END FIX --- */}
          </AppProvider>
        </LocaleProvider>
      </body>
    </html>
  );
}